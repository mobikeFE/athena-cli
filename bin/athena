#!/usr/bin/env node
'use strict';

var chalk = require('chalk');
var program = require('commander');
var spawn = require('win-spawn');
var join = require('path').join;
var exists = require('fs').existsSync;

program
  .version(require('../package').version, '-v, --version')
  .usage('<command> [options]')
  .on('--help', printHelp)
  .parse(process.argv);

var aliases = {
  g: 'generate'
};

var args = process.argv.slice(3);
var subcmd = program.args[0];

if (aliases[subcmd]) subcmd = aliases[subcmd];

if (!subcmd) {
  program.help();
} else {
  var bin = executable(subcmd);
  if (bin) {
    console.log(bin);
    wrap(spawn(bin, args, {
      stdio: 'inherit', 
      customFds: [0, 1, 2]
    }));
  } else {
    program.help();
  }
}

function wrap(sp) {
  sp.on('close', function(code) {
    process.exit(code);
  });
}

function printHelp() {
  console.log('  Commands:');
  console.log();
  console.log('    generate       Generates new athena files(model、service、component、route) (short-cut alias: "g")');
  console.log();
  console.log('  Commands can be run with -h (or --help) for more information.')
}

function executable(subcmd) {
  var file = join(__dirname, 'athena-' + subcmd);
  if (exists(file)) {
    return file;
  }
}
